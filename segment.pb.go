// Code generated by protoc-gen-go. DO NOT EDIT.
// source: segment.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	segment.proto
	api.proto
	field.proto
	index.proto

It has these top-level messages:
	Segment
	SegmentField
	SegmentFieldString
	SegmentFieldRepeatedString
	SegmentFieldInt
	SegmentFieldRepeatedInt
	SegmentFieldUInt
	SegmentFieldRepeatedUInt
	SegmentFieldFloat
	SegmentFieldRepeatedFloat
	SegmentFieldBool
	SegmentFieldRepeatedBool
	SegmentFieldBlob
	SegmentFieldRepeatedBlob
	SegmentFieldRangeInt
	SegmentFieldRepeatedRangeInt
	SegmentFieldRangeFloat
	SegmentFieldRepeatedRangeFloat
	SegmentFieldGeoPoint
	SegmentFieldRepeatedGeoPoint
	SegmentFieldGeoRect
	SegmentFieldRepeatedGeoRect
	PutSegmentRequest
	PutSegmentResponse
	GetSegmentRequest
	GetSegmentResponse
	DeleteSegmentRequest
	DeleteSegmentResponse
	MatchSegmentRequest
	MatchSegmentResponse
	MatchSegmentKeyRequest
	MatchSegmentKeyResponse
	FieldDefinition
	IndexDefinition
	IndexMeta
	AddIndexRequest
	AddIndexResponse
	DescribeIndexRequest
	DescribeIndexResponse
	DeleteIndexRequest
	DeleteIndexResponse
	ListIndexesRequest
	ListIndexesResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Segment struct {
	Fields []*SegmentField `protobuf:"bytes,1,rep,name=fields" json:"fields,omitempty"`
}

func (m *Segment) Reset()                    { *m = Segment{} }
func (m *Segment) String() string            { return proto.CompactTextString(m) }
func (*Segment) ProtoMessage()               {}
func (*Segment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Segment) GetFields() []*SegmentField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type SegmentField struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*SegmentField_StringValue
	//	*SegmentField_RepeatedStringValue
	//	*SegmentField_IntValue
	//	*SegmentField_RepeatedIntValue
	//	*SegmentField_UintValue
	//	*SegmentField_RepeatedUintValue
	//	*SegmentField_FloatValue
	//	*SegmentField_RepeatedFloatValue
	//	*SegmentField_BoolValue
	//	*SegmentField_RepeatedBoolValue
	//	*SegmentField_BlobValue
	//	*SegmentField_RepeatedBlobValue
	//	*SegmentField_RangeIntValue
	//	*SegmentField_RepeatedRangeIntValue
	//	*SegmentField_RangeFloatValue
	//	*SegmentField_RepeatedRangeFloatValue
	//	*SegmentField_GeoPointValue
	//	*SegmentField_RepeatedGeoPointValue
	//	*SegmentField_GeoRectValue
	//	*SegmentField_RepeatedGeoRectValue
	Value isSegmentField_Value `protobuf_oneof:"value"`
}

func (m *SegmentField) Reset()                    { *m = SegmentField{} }
func (m *SegmentField) String() string            { return proto.CompactTextString(m) }
func (*SegmentField) ProtoMessage()               {}
func (*SegmentField) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type isSegmentField_Value interface {
	isSegmentField_Value()
}

type SegmentField_StringValue struct {
	StringValue *SegmentFieldString `protobuf:"bytes,10,opt,name=string_value,json=stringValue,oneof"`
}
type SegmentField_RepeatedStringValue struct {
	RepeatedStringValue *SegmentFieldRepeatedString `protobuf:"bytes,11,opt,name=repeated_string_value,json=repeatedStringValue,oneof"`
}
type SegmentField_IntValue struct {
	IntValue *SegmentFieldInt `protobuf:"bytes,20,opt,name=int_value,json=intValue,oneof"`
}
type SegmentField_RepeatedIntValue struct {
	RepeatedIntValue *SegmentFieldRepeatedInt `protobuf:"bytes,21,opt,name=repeated_int_value,json=repeatedIntValue,oneof"`
}
type SegmentField_UintValue struct {
	UintValue *SegmentFieldUInt `protobuf:"bytes,30,opt,name=uint_value,json=uintValue,oneof"`
}
type SegmentField_RepeatedUintValue struct {
	RepeatedUintValue *SegmentFieldRepeatedUInt `protobuf:"bytes,31,opt,name=repeated_uint_value,json=repeatedUintValue,oneof"`
}
type SegmentField_FloatValue struct {
	FloatValue *SegmentFieldFloat `protobuf:"bytes,40,opt,name=float_value,json=floatValue,oneof"`
}
type SegmentField_RepeatedFloatValue struct {
	RepeatedFloatValue *SegmentFieldRepeatedFloat `protobuf:"bytes,41,opt,name=repeated_float_value,json=repeatedFloatValue,oneof"`
}
type SegmentField_BoolValue struct {
	BoolValue *SegmentFieldBool `protobuf:"bytes,50,opt,name=bool_value,json=boolValue,oneof"`
}
type SegmentField_RepeatedBoolValue struct {
	RepeatedBoolValue *SegmentFieldRepeatedBool `protobuf:"bytes,51,opt,name=repeated_bool_value,json=repeatedBoolValue,oneof"`
}
type SegmentField_BlobValue struct {
	BlobValue *SegmentFieldBlob `protobuf:"bytes,60,opt,name=blob_value,json=blobValue,oneof"`
}
type SegmentField_RepeatedBlobValue struct {
	RepeatedBlobValue *SegmentFieldRepeatedBlob `protobuf:"bytes,61,opt,name=repeated_blob_value,json=repeatedBlobValue,oneof"`
}
type SegmentField_RangeIntValue struct {
	RangeIntValue *SegmentFieldRangeInt `protobuf:"bytes,70,opt,name=range_int_value,json=rangeIntValue,oneof"`
}
type SegmentField_RepeatedRangeIntValue struct {
	RepeatedRangeIntValue *SegmentFieldRepeatedRangeInt `protobuf:"bytes,71,opt,name=repeated_range_int_value,json=repeatedRangeIntValue,oneof"`
}
type SegmentField_RangeFloatValue struct {
	RangeFloatValue *SegmentFieldRangeFloat `protobuf:"bytes,80,opt,name=range_float_value,json=rangeFloatValue,oneof"`
}
type SegmentField_RepeatedRangeFloatValue struct {
	RepeatedRangeFloatValue *SegmentFieldRepeatedRangeFloat `protobuf:"bytes,81,opt,name=repeated_range_float_value,json=repeatedRangeFloatValue,oneof"`
}
type SegmentField_GeoPointValue struct {
	GeoPointValue *SegmentFieldGeoPoint `protobuf:"bytes,90,opt,name=geo_point_value,json=geoPointValue,oneof"`
}
type SegmentField_RepeatedGeoPointValue struct {
	RepeatedGeoPointValue *SegmentFieldRepeatedGeoPoint `protobuf:"bytes,91,opt,name=repeated_geo_point_value,json=repeatedGeoPointValue,oneof"`
}
type SegmentField_GeoRectValue struct {
	GeoRectValue *SegmentFieldGeoRect `protobuf:"bytes,100,opt,name=geo_rect_value,json=geoRectValue,oneof"`
}
type SegmentField_RepeatedGeoRectValue struct {
	RepeatedGeoRectValue *SegmentFieldRepeatedGeoRect `protobuf:"bytes,101,opt,name=repeated_geo_rect_value,json=repeatedGeoRectValue,oneof"`
}

func (*SegmentField_StringValue) isSegmentField_Value()             {}
func (*SegmentField_RepeatedStringValue) isSegmentField_Value()     {}
func (*SegmentField_IntValue) isSegmentField_Value()                {}
func (*SegmentField_RepeatedIntValue) isSegmentField_Value()        {}
func (*SegmentField_UintValue) isSegmentField_Value()               {}
func (*SegmentField_RepeatedUintValue) isSegmentField_Value()       {}
func (*SegmentField_FloatValue) isSegmentField_Value()              {}
func (*SegmentField_RepeatedFloatValue) isSegmentField_Value()      {}
func (*SegmentField_BoolValue) isSegmentField_Value()               {}
func (*SegmentField_RepeatedBoolValue) isSegmentField_Value()       {}
func (*SegmentField_BlobValue) isSegmentField_Value()               {}
func (*SegmentField_RepeatedBlobValue) isSegmentField_Value()       {}
func (*SegmentField_RangeIntValue) isSegmentField_Value()           {}
func (*SegmentField_RepeatedRangeIntValue) isSegmentField_Value()   {}
func (*SegmentField_RangeFloatValue) isSegmentField_Value()         {}
func (*SegmentField_RepeatedRangeFloatValue) isSegmentField_Value() {}
func (*SegmentField_GeoPointValue) isSegmentField_Value()           {}
func (*SegmentField_RepeatedGeoPointValue) isSegmentField_Value()   {}
func (*SegmentField_GeoRectValue) isSegmentField_Value()            {}
func (*SegmentField_RepeatedGeoRectValue) isSegmentField_Value()    {}

func (m *SegmentField) GetValue() isSegmentField_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *SegmentField) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SegmentField) GetStringValue() *SegmentFieldString {
	if x, ok := m.GetValue().(*SegmentField_StringValue); ok {
		return x.StringValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedStringValue() *SegmentFieldRepeatedString {
	if x, ok := m.GetValue().(*SegmentField_RepeatedStringValue); ok {
		return x.RepeatedStringValue
	}
	return nil
}

func (m *SegmentField) GetIntValue() *SegmentFieldInt {
	if x, ok := m.GetValue().(*SegmentField_IntValue); ok {
		return x.IntValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedIntValue() *SegmentFieldRepeatedInt {
	if x, ok := m.GetValue().(*SegmentField_RepeatedIntValue); ok {
		return x.RepeatedIntValue
	}
	return nil
}

func (m *SegmentField) GetUintValue() *SegmentFieldUInt {
	if x, ok := m.GetValue().(*SegmentField_UintValue); ok {
		return x.UintValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedUintValue() *SegmentFieldRepeatedUInt {
	if x, ok := m.GetValue().(*SegmentField_RepeatedUintValue); ok {
		return x.RepeatedUintValue
	}
	return nil
}

func (m *SegmentField) GetFloatValue() *SegmentFieldFloat {
	if x, ok := m.GetValue().(*SegmentField_FloatValue); ok {
		return x.FloatValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedFloatValue() *SegmentFieldRepeatedFloat {
	if x, ok := m.GetValue().(*SegmentField_RepeatedFloatValue); ok {
		return x.RepeatedFloatValue
	}
	return nil
}

func (m *SegmentField) GetBoolValue() *SegmentFieldBool {
	if x, ok := m.GetValue().(*SegmentField_BoolValue); ok {
		return x.BoolValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedBoolValue() *SegmentFieldRepeatedBool {
	if x, ok := m.GetValue().(*SegmentField_RepeatedBoolValue); ok {
		return x.RepeatedBoolValue
	}
	return nil
}

func (m *SegmentField) GetBlobValue() *SegmentFieldBlob {
	if x, ok := m.GetValue().(*SegmentField_BlobValue); ok {
		return x.BlobValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedBlobValue() *SegmentFieldRepeatedBlob {
	if x, ok := m.GetValue().(*SegmentField_RepeatedBlobValue); ok {
		return x.RepeatedBlobValue
	}
	return nil
}

func (m *SegmentField) GetRangeIntValue() *SegmentFieldRangeInt {
	if x, ok := m.GetValue().(*SegmentField_RangeIntValue); ok {
		return x.RangeIntValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedRangeIntValue() *SegmentFieldRepeatedRangeInt {
	if x, ok := m.GetValue().(*SegmentField_RepeatedRangeIntValue); ok {
		return x.RepeatedRangeIntValue
	}
	return nil
}

func (m *SegmentField) GetRangeFloatValue() *SegmentFieldRangeFloat {
	if x, ok := m.GetValue().(*SegmentField_RangeFloatValue); ok {
		return x.RangeFloatValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedRangeFloatValue() *SegmentFieldRepeatedRangeFloat {
	if x, ok := m.GetValue().(*SegmentField_RepeatedRangeFloatValue); ok {
		return x.RepeatedRangeFloatValue
	}
	return nil
}

func (m *SegmentField) GetGeoPointValue() *SegmentFieldGeoPoint {
	if x, ok := m.GetValue().(*SegmentField_GeoPointValue); ok {
		return x.GeoPointValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedGeoPointValue() *SegmentFieldRepeatedGeoPoint {
	if x, ok := m.GetValue().(*SegmentField_RepeatedGeoPointValue); ok {
		return x.RepeatedGeoPointValue
	}
	return nil
}

func (m *SegmentField) GetGeoRectValue() *SegmentFieldGeoRect {
	if x, ok := m.GetValue().(*SegmentField_GeoRectValue); ok {
		return x.GeoRectValue
	}
	return nil
}

func (m *SegmentField) GetRepeatedGeoRectValue() *SegmentFieldRepeatedGeoRect {
	if x, ok := m.GetValue().(*SegmentField_RepeatedGeoRectValue); ok {
		return x.RepeatedGeoRectValue
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*SegmentField) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _SegmentField_OneofMarshaler, _SegmentField_OneofUnmarshaler, _SegmentField_OneofSizer, []interface{}{
		(*SegmentField_StringValue)(nil),
		(*SegmentField_RepeatedStringValue)(nil),
		(*SegmentField_IntValue)(nil),
		(*SegmentField_RepeatedIntValue)(nil),
		(*SegmentField_UintValue)(nil),
		(*SegmentField_RepeatedUintValue)(nil),
		(*SegmentField_FloatValue)(nil),
		(*SegmentField_RepeatedFloatValue)(nil),
		(*SegmentField_BoolValue)(nil),
		(*SegmentField_RepeatedBoolValue)(nil),
		(*SegmentField_BlobValue)(nil),
		(*SegmentField_RepeatedBlobValue)(nil),
		(*SegmentField_RangeIntValue)(nil),
		(*SegmentField_RepeatedRangeIntValue)(nil),
		(*SegmentField_RangeFloatValue)(nil),
		(*SegmentField_RepeatedRangeFloatValue)(nil),
		(*SegmentField_GeoPointValue)(nil),
		(*SegmentField_RepeatedGeoPointValue)(nil),
		(*SegmentField_GeoRectValue)(nil),
		(*SegmentField_RepeatedGeoRectValue)(nil),
	}
}

func _SegmentField_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*SegmentField)
	// value
	switch x := m.Value.(type) {
	case *SegmentField_StringValue:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedStringValue:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedStringValue); err != nil {
			return err
		}
	case *SegmentField_IntValue:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IntValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedIntValue:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedIntValue); err != nil {
			return err
		}
	case *SegmentField_UintValue:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.UintValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedUintValue:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedUintValue); err != nil {
			return err
		}
	case *SegmentField_FloatValue:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FloatValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedFloatValue:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedFloatValue); err != nil {
			return err
		}
	case *SegmentField_BoolValue:
		b.EncodeVarint(50<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BoolValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedBoolValue:
		b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedBoolValue); err != nil {
			return err
		}
	case *SegmentField_BlobValue:
		b.EncodeVarint(60<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlobValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedBlobValue:
		b.EncodeVarint(61<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedBlobValue); err != nil {
			return err
		}
	case *SegmentField_RangeIntValue:
		b.EncodeVarint(70<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RangeIntValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedRangeIntValue:
		b.EncodeVarint(71<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedRangeIntValue); err != nil {
			return err
		}
	case *SegmentField_RangeFloatValue:
		b.EncodeVarint(80<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RangeFloatValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedRangeFloatValue:
		b.EncodeVarint(81<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedRangeFloatValue); err != nil {
			return err
		}
	case *SegmentField_GeoPointValue:
		b.EncodeVarint(90<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GeoPointValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedGeoPointValue:
		b.EncodeVarint(91<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedGeoPointValue); err != nil {
			return err
		}
	case *SegmentField_GeoRectValue:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GeoRectValue); err != nil {
			return err
		}
	case *SegmentField_RepeatedGeoRectValue:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepeatedGeoRectValue); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("SegmentField.Value has unexpected type %T", x)
	}
	return nil
}

func _SegmentField_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*SegmentField)
	switch tag {
	case 10: // value.string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldString)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_StringValue{msg}
		return true, err
	case 11: // value.repeated_string_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedString)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedStringValue{msg}
		return true, err
	case 20: // value.int_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_IntValue{msg}
		return true, err
	case 21: // value.repeated_int_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedIntValue{msg}
		return true, err
	case 30: // value.uint_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldUInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_UintValue{msg}
		return true, err
	case 31: // value.repeated_uint_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedUInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedUintValue{msg}
		return true, err
	case 40: // value.float_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldFloat)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_FloatValue{msg}
		return true, err
	case 41: // value.repeated_float_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedFloat)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedFloatValue{msg}
		return true, err
	case 50: // value.bool_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldBool)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_BoolValue{msg}
		return true, err
	case 51: // value.repeated_bool_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedBool)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedBoolValue{msg}
		return true, err
	case 60: // value.blob_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldBlob)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_BlobValue{msg}
		return true, err
	case 61: // value.repeated_blob_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedBlob)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedBlobValue{msg}
		return true, err
	case 70: // value.range_int_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRangeInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RangeIntValue{msg}
		return true, err
	case 71: // value.repeated_range_int_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedRangeInt)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedRangeIntValue{msg}
		return true, err
	case 80: // value.range_float_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRangeFloat)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RangeFloatValue{msg}
		return true, err
	case 81: // value.repeated_range_float_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedRangeFloat)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedRangeFloatValue{msg}
		return true, err
	case 90: // value.geo_point_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldGeoPoint)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_GeoPointValue{msg}
		return true, err
	case 91: // value.repeated_geo_point_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedGeoPoint)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedGeoPointValue{msg}
		return true, err
	case 100: // value.geo_rect_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldGeoRect)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_GeoRectValue{msg}
		return true, err
	case 101: // value.repeated_geo_rect_value
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SegmentFieldRepeatedGeoRect)
		err := b.DecodeMessage(msg)
		m.Value = &SegmentField_RepeatedGeoRectValue{msg}
		return true, err
	default:
		return false, nil
	}
}

func _SegmentField_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*SegmentField)
	// value
	switch x := m.Value.(type) {
	case *SegmentField_StringValue:
		s := proto.Size(x.StringValue)
		n += proto.SizeVarint(10<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedStringValue:
		s := proto.Size(x.RepeatedStringValue)
		n += proto.SizeVarint(11<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_IntValue:
		s := proto.Size(x.IntValue)
		n += proto.SizeVarint(20<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedIntValue:
		s := proto.Size(x.RepeatedIntValue)
		n += proto.SizeVarint(21<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_UintValue:
		s := proto.Size(x.UintValue)
		n += proto.SizeVarint(30<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedUintValue:
		s := proto.Size(x.RepeatedUintValue)
		n += proto.SizeVarint(31<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_FloatValue:
		s := proto.Size(x.FloatValue)
		n += proto.SizeVarint(40<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedFloatValue:
		s := proto.Size(x.RepeatedFloatValue)
		n += proto.SizeVarint(41<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_BoolValue:
		s := proto.Size(x.BoolValue)
		n += proto.SizeVarint(50<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedBoolValue:
		s := proto.Size(x.RepeatedBoolValue)
		n += proto.SizeVarint(51<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_BlobValue:
		s := proto.Size(x.BlobValue)
		n += proto.SizeVarint(60<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedBlobValue:
		s := proto.Size(x.RepeatedBlobValue)
		n += proto.SizeVarint(61<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RangeIntValue:
		s := proto.Size(x.RangeIntValue)
		n += proto.SizeVarint(70<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedRangeIntValue:
		s := proto.Size(x.RepeatedRangeIntValue)
		n += proto.SizeVarint(71<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RangeFloatValue:
		s := proto.Size(x.RangeFloatValue)
		n += proto.SizeVarint(80<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedRangeFloatValue:
		s := proto.Size(x.RepeatedRangeFloatValue)
		n += proto.SizeVarint(81<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_GeoPointValue:
		s := proto.Size(x.GeoPointValue)
		n += proto.SizeVarint(90<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedGeoPointValue:
		s := proto.Size(x.RepeatedGeoPointValue)
		n += proto.SizeVarint(91<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_GeoRectValue:
		s := proto.Size(x.GeoRectValue)
		n += proto.SizeVarint(100<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *SegmentField_RepeatedGeoRectValue:
		s := proto.Size(x.RepeatedGeoRectValue)
		n += proto.SizeVarint(101<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SegmentFieldString struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldString) Reset()                    { *m = SegmentFieldString{} }
func (m *SegmentFieldString) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldString) ProtoMessage()               {}
func (*SegmentFieldString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SegmentFieldString) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SegmentFieldRepeatedString struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedString) Reset()                    { *m = SegmentFieldRepeatedString{} }
func (m *SegmentFieldRepeatedString) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedString) ProtoMessage()               {}
func (*SegmentFieldRepeatedString) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SegmentFieldRepeatedString) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldInt struct {
	Value int64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldInt) Reset()                    { *m = SegmentFieldInt{} }
func (m *SegmentFieldInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldInt) ProtoMessage()               {}
func (*SegmentFieldInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SegmentFieldInt) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SegmentFieldRepeatedInt struct {
	Value []int64 `protobuf:"varint,1,rep,packed,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedInt) Reset()                    { *m = SegmentFieldRepeatedInt{} }
func (m *SegmentFieldRepeatedInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedInt) ProtoMessage()               {}
func (*SegmentFieldRepeatedInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SegmentFieldRepeatedInt) GetValue() []int64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldUInt struct {
	Value uint64 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldUInt) Reset()                    { *m = SegmentFieldUInt{} }
func (m *SegmentFieldUInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldUInt) ProtoMessage()               {}
func (*SegmentFieldUInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *SegmentFieldUInt) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SegmentFieldRepeatedUInt struct {
	Value []uint64 `protobuf:"varint,1,rep,packed,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedUInt) Reset()                    { *m = SegmentFieldRepeatedUInt{} }
func (m *SegmentFieldRepeatedUInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedUInt) ProtoMessage()               {}
func (*SegmentFieldRepeatedUInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SegmentFieldRepeatedUInt) GetValue() []uint64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldFloat struct {
	Value float64 `protobuf:"fixed64,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldFloat) Reset()                    { *m = SegmentFieldFloat{} }
func (m *SegmentFieldFloat) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldFloat) ProtoMessage()               {}
func (*SegmentFieldFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SegmentFieldFloat) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SegmentFieldRepeatedFloat struct {
	Value []float64 `protobuf:"fixed64,1,rep,packed,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedFloat) Reset()                    { *m = SegmentFieldRepeatedFloat{} }
func (m *SegmentFieldRepeatedFloat) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedFloat) ProtoMessage()               {}
func (*SegmentFieldRepeatedFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SegmentFieldRepeatedFloat) GetValue() []float64 {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldBool struct {
	Value bool `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldBool) Reset()                    { *m = SegmentFieldBool{} }
func (m *SegmentFieldBool) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldBool) ProtoMessage()               {}
func (*SegmentFieldBool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SegmentFieldBool) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

type SegmentFieldRepeatedBool struct {
	Value []bool `protobuf:"varint,1,rep,packed,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedBool) Reset()                    { *m = SegmentFieldRepeatedBool{} }
func (m *SegmentFieldRepeatedBool) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedBool) ProtoMessage()               {}
func (*SegmentFieldRepeatedBool) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *SegmentFieldRepeatedBool) GetValue() []bool {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldBlob struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldBlob) Reset()                    { *m = SegmentFieldBlob{} }
func (m *SegmentFieldBlob) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldBlob) ProtoMessage()               {}
func (*SegmentFieldBlob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SegmentFieldBlob) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SegmentFieldRepeatedBlob struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedBlob) Reset()                    { *m = SegmentFieldRepeatedBlob{} }
func (m *SegmentFieldRepeatedBlob) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedBlob) ProtoMessage()               {}
func (*SegmentFieldRepeatedBlob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SegmentFieldRepeatedBlob) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldRangeInt struct {
	Min int64 `protobuf:"varint,1,opt,name=min" json:"min,omitempty"`
	Max int64 `protobuf:"varint,2,opt,name=max" json:"max,omitempty"`
}

func (m *SegmentFieldRangeInt) Reset()                    { *m = SegmentFieldRangeInt{} }
func (m *SegmentFieldRangeInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRangeInt) ProtoMessage()               {}
func (*SegmentFieldRangeInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SegmentFieldRangeInt) GetMin() int64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *SegmentFieldRangeInt) GetMax() int64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SegmentFieldRepeatedRangeInt struct {
	Value []*SegmentFieldRangeInt `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedRangeInt) Reset()                    { *m = SegmentFieldRepeatedRangeInt{} }
func (m *SegmentFieldRepeatedRangeInt) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedRangeInt) ProtoMessage()               {}
func (*SegmentFieldRepeatedRangeInt) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SegmentFieldRepeatedRangeInt) GetValue() []*SegmentFieldRangeInt {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldRangeFloat struct {
	Min float64 `protobuf:"fixed64,1,opt,name=min" json:"min,omitempty"`
	Max float64 `protobuf:"fixed64,2,opt,name=max" json:"max,omitempty"`
}

func (m *SegmentFieldRangeFloat) Reset()                    { *m = SegmentFieldRangeFloat{} }
func (m *SegmentFieldRangeFloat) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRangeFloat) ProtoMessage()               {}
func (*SegmentFieldRangeFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *SegmentFieldRangeFloat) GetMin() float64 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *SegmentFieldRangeFloat) GetMax() float64 {
	if m != nil {
		return m.Max
	}
	return 0
}

type SegmentFieldRepeatedRangeFloat struct {
	Value []*SegmentFieldRangeFloat `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedRangeFloat) Reset()                    { *m = SegmentFieldRepeatedRangeFloat{} }
func (m *SegmentFieldRepeatedRangeFloat) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedRangeFloat) ProtoMessage()               {}
func (*SegmentFieldRepeatedRangeFloat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *SegmentFieldRepeatedRangeFloat) GetValue() []*SegmentFieldRangeFloat {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldGeoPoint struct {
	X float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
}

func (m *SegmentFieldGeoPoint) Reset()                    { *m = SegmentFieldGeoPoint{} }
func (m *SegmentFieldGeoPoint) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldGeoPoint) ProtoMessage()               {}
func (*SegmentFieldGeoPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *SegmentFieldGeoPoint) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SegmentFieldGeoPoint) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type SegmentFieldRepeatedGeoPoint struct {
	Value []*SegmentFieldGeoPoint `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedGeoPoint) Reset()                    { *m = SegmentFieldRepeatedGeoPoint{} }
func (m *SegmentFieldRepeatedGeoPoint) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedGeoPoint) ProtoMessage()               {}
func (*SegmentFieldRepeatedGeoPoint) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *SegmentFieldRepeatedGeoPoint) GetValue() []*SegmentFieldGeoPoint {
	if m != nil {
		return m.Value
	}
	return nil
}

type SegmentFieldGeoRect struct {
	TopLeft     *SegmentFieldGeoPoint `protobuf:"bytes,1,opt,name=top_left,json=topLeft" json:"top_left,omitempty"`
	BottomRight *SegmentFieldGeoPoint `protobuf:"bytes,2,opt,name=bottom_right,json=bottomRight" json:"bottom_right,omitempty"`
}

func (m *SegmentFieldGeoRect) Reset()                    { *m = SegmentFieldGeoRect{} }
func (m *SegmentFieldGeoRect) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldGeoRect) ProtoMessage()               {}
func (*SegmentFieldGeoRect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *SegmentFieldGeoRect) GetTopLeft() *SegmentFieldGeoPoint {
	if m != nil {
		return m.TopLeft
	}
	return nil
}

func (m *SegmentFieldGeoRect) GetBottomRight() *SegmentFieldGeoPoint {
	if m != nil {
		return m.BottomRight
	}
	return nil
}

type SegmentFieldRepeatedGeoRect struct {
	Value []*SegmentFieldGeoRect `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *SegmentFieldRepeatedGeoRect) Reset()                    { *m = SegmentFieldRepeatedGeoRect{} }
func (m *SegmentFieldRepeatedGeoRect) String() string            { return proto.CompactTextString(m) }
func (*SegmentFieldRepeatedGeoRect) ProtoMessage()               {}
func (*SegmentFieldRepeatedGeoRect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *SegmentFieldRepeatedGeoRect) GetValue() []*SegmentFieldGeoRect {
	if m != nil {
		return m.Value
	}
	return nil
}

type PutSegmentRequest struct {
	Index   string   `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
	Segment *Segment `protobuf:"bytes,2,opt,name=segment" json:"segment,omitempty"`
}

func (m *PutSegmentRequest) Reset()                    { *m = PutSegmentRequest{} }
func (m *PutSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*PutSegmentRequest) ProtoMessage()               {}
func (*PutSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *PutSegmentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *PutSegmentRequest) GetSegment() *Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type PutSegmentResponse struct {
}

func (m *PutSegmentResponse) Reset()                    { *m = PutSegmentResponse{} }
func (m *PutSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*PutSegmentResponse) ProtoMessage()               {}
func (*PutSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type GetSegmentRequest struct {
	Index string        `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
	Key   *SegmentField `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *GetSegmentRequest) Reset()                    { *m = GetSegmentRequest{} }
func (m *GetSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetSegmentRequest) ProtoMessage()               {}
func (*GetSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetSegmentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *GetSegmentRequest) GetKey() *SegmentField {
	if m != nil {
		return m.Key
	}
	return nil
}

type GetSegmentResponse struct {
	Segment *Segment `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
}

func (m *GetSegmentResponse) Reset()                    { *m = GetSegmentResponse{} }
func (m *GetSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetSegmentResponse) ProtoMessage()               {}
func (*GetSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetSegmentResponse) GetSegment() *Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

type DeleteSegmentRequest struct {
	Index string        `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
	Key   *SegmentField `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
}

func (m *DeleteSegmentRequest) Reset()                    { *m = DeleteSegmentRequest{} }
func (m *DeleteSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteSegmentRequest) ProtoMessage()               {}
func (*DeleteSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *DeleteSegmentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *DeleteSegmentRequest) GetKey() *SegmentField {
	if m != nil {
		return m.Key
	}
	return nil
}

type DeleteSegmentResponse struct {
}

func (m *DeleteSegmentResponse) Reset()                    { *m = DeleteSegmentResponse{} }
func (m *DeleteSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteSegmentResponse) ProtoMessage()               {}
func (*DeleteSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type MatchSegmentRequest struct {
	Index  string          `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
	Fields []*SegmentField `protobuf:"bytes,2,rep,name=fields" json:"fields,omitempty"`
}

func (m *MatchSegmentRequest) Reset()                    { *m = MatchSegmentRequest{} }
func (m *MatchSegmentRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchSegmentRequest) ProtoMessage()               {}
func (*MatchSegmentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *MatchSegmentRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MatchSegmentRequest) GetFields() []*SegmentField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type MatchSegmentResponse struct {
	Results []*Segment `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *MatchSegmentResponse) Reset()                    { *m = MatchSegmentResponse{} }
func (m *MatchSegmentResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchSegmentResponse) ProtoMessage()               {}
func (*MatchSegmentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *MatchSegmentResponse) GetResults() []*Segment {
	if m != nil {
		return m.Results
	}
	return nil
}

type MatchSegmentKeyRequest struct {
	Index  string          `protobuf:"bytes,1,opt,name=index" json:"index,omitempty"`
	Fields []*SegmentField `protobuf:"bytes,2,rep,name=fields" json:"fields,omitempty"`
}

func (m *MatchSegmentKeyRequest) Reset()                    { *m = MatchSegmentKeyRequest{} }
func (m *MatchSegmentKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchSegmentKeyRequest) ProtoMessage()               {}
func (*MatchSegmentKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *MatchSegmentKeyRequest) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

func (m *MatchSegmentKeyRequest) GetFields() []*SegmentField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type MatchSegmentKeyResponse struct {
	Results []*SegmentField `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *MatchSegmentKeyResponse) Reset()                    { *m = MatchSegmentKeyResponse{} }
func (m *MatchSegmentKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchSegmentKeyResponse) ProtoMessage()               {}
func (*MatchSegmentKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *MatchSegmentKeyResponse) GetResults() []*SegmentField {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Segment)(nil), "api.Segment")
	proto.RegisterType((*SegmentField)(nil), "api.SegmentField")
	proto.RegisterType((*SegmentFieldString)(nil), "api.SegmentFieldString")
	proto.RegisterType((*SegmentFieldRepeatedString)(nil), "api.SegmentFieldRepeatedString")
	proto.RegisterType((*SegmentFieldInt)(nil), "api.SegmentFieldInt")
	proto.RegisterType((*SegmentFieldRepeatedInt)(nil), "api.SegmentFieldRepeatedInt")
	proto.RegisterType((*SegmentFieldUInt)(nil), "api.SegmentFieldUInt")
	proto.RegisterType((*SegmentFieldRepeatedUInt)(nil), "api.SegmentFieldRepeatedUInt")
	proto.RegisterType((*SegmentFieldFloat)(nil), "api.SegmentFieldFloat")
	proto.RegisterType((*SegmentFieldRepeatedFloat)(nil), "api.SegmentFieldRepeatedFloat")
	proto.RegisterType((*SegmentFieldBool)(nil), "api.SegmentFieldBool")
	proto.RegisterType((*SegmentFieldRepeatedBool)(nil), "api.SegmentFieldRepeatedBool")
	proto.RegisterType((*SegmentFieldBlob)(nil), "api.SegmentFieldBlob")
	proto.RegisterType((*SegmentFieldRepeatedBlob)(nil), "api.SegmentFieldRepeatedBlob")
	proto.RegisterType((*SegmentFieldRangeInt)(nil), "api.SegmentFieldRangeInt")
	proto.RegisterType((*SegmentFieldRepeatedRangeInt)(nil), "api.SegmentFieldRepeatedRangeInt")
	proto.RegisterType((*SegmentFieldRangeFloat)(nil), "api.SegmentFieldRangeFloat")
	proto.RegisterType((*SegmentFieldRepeatedRangeFloat)(nil), "api.SegmentFieldRepeatedRangeFloat")
	proto.RegisterType((*SegmentFieldGeoPoint)(nil), "api.SegmentFieldGeoPoint")
	proto.RegisterType((*SegmentFieldRepeatedGeoPoint)(nil), "api.SegmentFieldRepeatedGeoPoint")
	proto.RegisterType((*SegmentFieldGeoRect)(nil), "api.SegmentFieldGeoRect")
	proto.RegisterType((*SegmentFieldRepeatedGeoRect)(nil), "api.SegmentFieldRepeatedGeoRect")
	proto.RegisterType((*PutSegmentRequest)(nil), "api.PutSegmentRequest")
	proto.RegisterType((*PutSegmentResponse)(nil), "api.PutSegmentResponse")
	proto.RegisterType((*GetSegmentRequest)(nil), "api.GetSegmentRequest")
	proto.RegisterType((*GetSegmentResponse)(nil), "api.GetSegmentResponse")
	proto.RegisterType((*DeleteSegmentRequest)(nil), "api.DeleteSegmentRequest")
	proto.RegisterType((*DeleteSegmentResponse)(nil), "api.DeleteSegmentResponse")
	proto.RegisterType((*MatchSegmentRequest)(nil), "api.MatchSegmentRequest")
	proto.RegisterType((*MatchSegmentResponse)(nil), "api.MatchSegmentResponse")
	proto.RegisterType((*MatchSegmentKeyRequest)(nil), "api.MatchSegmentKeyRequest")
	proto.RegisterType((*MatchSegmentKeyResponse)(nil), "api.MatchSegmentKeyResponse")
}

func init() { proto.RegisterFile("segment.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 940 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x97, 0xff, 0x6f, 0xdb, 0x44,
	0x18, 0xc6, 0xf1, 0x32, 0xd6, 0xf6, 0x4d, 0xc6, 0x9a, 0xab, 0xd3, 0x64, 0x5f, 0xe8, 0x86, 0x27,
	0x41, 0x0a, 0x52, 0xc6, 0xd2, 0x09, 0x09, 0x54, 0x10, 0x2a, 0x28, 0x61, 0x62, 0x63, 0xad, 0xab,
	0x4e, 0x1a, 0x20, 0x45, 0xce, 0x72, 0xcd, 0x22, 0x1c, 0x3b, 0x38, 0x0e, 0x4a, 0xfe, 0x04, 0xfe,
	0x6a, 0xb8, 0xef, 0xbe, 0xb3, 0x7d, 0xce, 0x7e, 0xd8, 0x4f, 0x75, 0xee, 0x9e, 0xf7, 0xe3, 0xe7,
	0xde, 0x3b, 0x3f, 0xb5, 0xe1, 0xf6, 0x12, 0x4f, 0xe7, 0x38, 0x4a, 0x7b, 0x8b, 0x24, 0x4e, 0x63,
	0x54, 0x0b, 0x16, 0x33, 0xef, 0x19, 0xec, 0x5c, 0xf2, 0x51, 0x74, 0x0c, 0xb7, 0xae, 0x67, 0x38,
	0x9c, 0x2c, 0x3b, 0xce, 0xa3, 0x5a, 0xb7, 0xde, 0x6f, 0xf6, 0x88, 0xa0, 0x27, 0x66, 0x07, 0x74,
	0xc6, 0x17, 0x02, 0xef, 0xbf, 0x3a, 0x34, 0xf4, 0x09, 0x84, 0xe0, 0x66, 0x14, 0xcc, 0x31, 0xa9,
	0x74, 0xba, 0x7b, 0x3e, 0xbb, 0x46, 0xa7, 0xd0, 0x58, 0xa6, 0xc9, 0x2c, 0x9a, 0x8e, 0xfe, 0x09,
	0xc2, 0x15, 0xee, 0x00, 0x99, 0xab, 0xf7, 0xdb, 0x05, 0xea, 0x25, 0x13, 0xfd, 0xf2, 0x91, 0x5f,
	0xe7, 0xf2, 0xd7, 0x54, 0x8d, 0xae, 0xa0, 0x95, 0xe0, 0x05, 0x0e, 0x52, 0x3c, 0x19, 0x19, 0x98,
	0x3a, 0xc3, 0x3c, 0x2c, 0x9a, 0x13, 0x6a, 0x85, 0x3b, 0x48, 0x8c, 0x11, 0x8e, 0x3d, 0x81, 0xbd,
	0x59, 0x94, 0x0a, 0x94, 0xcb, 0x50, 0x6e, 0x01, 0xf5, 0x3c, 0x4a, 0x49, 0xfd, 0x2e, 0x11, 0xf2,
	0xa2, 0x17, 0x80, 0x94, 0x97, 0xac, 0xba, 0xc5, 0xaa, 0x1f, 0x58, 0x8d, 0x70, 0xca, 0x7e, 0x92,
	0xfd, 0xe4, 0xb4, 0x6f, 0x00, 0x56, 0x19, 0xe5, 0x88, 0x51, 0x5a, 0x05, 0xca, 0x15, 0x2f, 0xdf,
	0x5b, 0x29, 0x17, 0xaf, 0x40, 0xad, 0x68, 0xa4, 0x01, 0x1e, 0x32, 0xc0, 0xa7, 0x56, 0x1b, 0x02,
	0xd4, 0x94, 0xb5, 0x57, 0x0a, 0xf8, 0x2d, 0xd4, 0xaf, 0xc3, 0x38, 0x90, 0xa0, 0x2e, 0x03, 0x1d,
	0x16, 0x40, 0x03, 0xaa, 0x21, 0x04, 0x60, 0x62, 0x5e, 0xea, 0x83, 0xab, 0xbc, 0xe8, 0x8c, 0x63,
	0xc6, 0x38, 0xb2, 0x9a, 0x91, 0x2c, 0xd5, 0xcf, 0x41, 0xc6, 0x24, 0x7d, 0x19, 0xc7, 0x71, 0x28,
	0x48, 0x7d, 0x4b, 0x5f, 0xce, 0x88, 0x84, 0xf6, 0x85, 0x4a, 0x8b, 0x7d, 0xd1, 0x00, 0x27, 0x5b,
	0xfa, 0x22, 0x40, 0xaa, 0x2f, 0x67, 0x0a, 0x48, 0x8d, 0x84, 0xf1, 0x58, 0x70, 0x4e, 0x6d, 0x46,
	0x88, 0x84, 0x19, 0x21, 0x7f, 0x4b, 0x8c, 0x64, 0x80, 0xef, 0xb7, 0x19, 0xe1, 0xa0, 0xcc, 0x88,
	0x02, 0xfe, 0x04, 0x77, 0x92, 0x20, 0x9a, 0x62, 0xed, 0xd0, 0x0d, 0x18, 0xec, 0x6e, 0x11, 0x46,
	0x75, 0x7c, 0xa7, 0x6f, 0x27, 0xe2, 0x9a, 0x43, 0xfe, 0x84, 0x8e, 0x72, 0x95, 0xa7, 0x0d, 0x19,
	0xed, 0x33, 0xab, 0x35, 0x8d, 0xaa, 0x9e, 0x46, 0xdf, 0xa0, 0x3f, 0x87, 0x26, 0x87, 0xea, 0xa7,
	0xe0, 0x9c, 0x61, 0xef, 0x97, 0x9b, 0x94, 0x47, 0x80, 0x2f, 0x4d, 0xdb, 0xff, 0x31, 0xdc, 0xcb,
	0x19, 0xd5, 0x99, 0x17, 0x8c, 0xf9, 0xb8, 0xda, 0xaa, 0x64, 0xb7, 0x93, 0xc2, 0xa8, 0xea, 0xe8,
	0x14, 0xc7, 0xa3, 0x45, 0x9c, 0xf5, 0xe0, 0x77, 0x4b, 0x47, 0x87, 0x38, 0x3e, 0xa7, 0x32, 0xda,
	0xd1, 0xa9, 0xb8, 0x2e, 0x76, 0x34, 0x4f, 0xfb, 0x63, 0x4b, 0x47, 0x35, 0xaa, 0xea, 0xe8, 0xd0,
	0xa0, 0xff, 0x08, 0x9f, 0x50, 0x68, 0x82, 0xdf, 0x4a, 0xe6, 0x84, 0x31, 0x3b, 0x65, 0x0e, 0x7d,
	0xa2, 0x22, 0xa8, 0xc6, 0x94, 0x5f, 0x72, 0xc2, 0x1b, 0x68, 0x1b, 0xfe, 0x34, 0x14, 0x66, 0xa8,
	0x47, 0x55, 0xf6, 0x04, 0xd2, 0x4d, 0xcc, 0x21, 0x86, 0x3e, 0xdb, 0x81, 0x8f, 0x19, 0xc8, 0xfb,
	0x12, 0x50, 0x31, 0xc3, 0x91, 0x2b, 0xa6, 0xc5, 0xff, 0x01, 0xa1, 0xed, 0xc3, 0x3d, 0x7b, 0x50,
	0xeb, 0x35, 0xb5, 0xac, 0xe6, 0x0b, 0xb8, 0x93, 0x4b, 0x64, 0x13, 0x5e, 0x93, 0xc2, 0x27, 0xd0,
	0xb6, 0x84, 0xaf, 0x49, 0x56, 0x05, 0x5d, 0xd8, 0xcf, 0xe7, 0xac, 0x89, 0xbe, 0x29, 0x95, 0x5f,
	0x43, 0xc7, 0x16, 0xa8, 0x26, 0x5b, 0x55, 0x1c, 0x43, 0xb3, 0x90, 0x9c, 0x26, 0xdc, 0x91, 0xd2,
	0xa7, 0x70, 0xd7, 0x1a, 0x90, 0x26, 0xdd, 0xb1, 0x38, 0xa7, 0x81, 0x65, 0xc2, 0x77, 0xb7, 0x38,
	0xcf, 0x57, 0xd4, 0xb2, 0x8a, 0x3c, 0x9b, 0x64, 0x90, 0x65, 0x37, 0x6d, 0xec, 0x5c, 0x85, 0xb6,
	0x97, 0xdf, 0x81, 0x5b, 0x16, 0x55, 0x68, 0x1f, 0x6a, 0xf3, 0x59, 0x24, 0xb6, 0x93, 0x5e, 0xb2,
	0x91, 0x60, 0xdd, 0xb9, 0x21, 0x46, 0x82, 0xb5, 0xf7, 0x0a, 0x1e, 0x54, 0x05, 0x13, 0x7a, 0xa2,
	0xdf, 0xb1, 0x2a, 0x18, 0xa5, 0x99, 0x53, 0x38, 0x2c, 0x8f, 0x24, 0xdd, 0x8e, 0x53, 0xb0, 0xe3,
	0x70, 0x3b, 0x97, 0x70, 0x54, 0x1d, 0x3e, 0xe8, 0xa9, 0x69, 0xa8, 0x2a, 0x04, 0xb3, 0xe7, 0xc3,
	0x2d, 0x0b, 0x1e, 0xd4, 0x00, 0x67, 0x2d, 0xec, 0x38, 0x6b, 0xfa, 0x6b, 0x23, 0xac, 0x38, 0x1b,
	0x5b, 0x5f, 0x54, 0xed, 0xd6, 0xbe, 0x48, 0xa5, 0x34, 0xf1, 0xaf, 0x03, 0x07, 0x25, 0xe1, 0x82,
	0x9e, 0xc1, 0x6e, 0x1a, 0x2f, 0x46, 0x21, 0xbe, 0x4e, 0x99, 0x97, 0x4a, 0xd6, 0x0e, 0x91, 0xbe,
	0x20, 0x4a, 0xfa, 0xee, 0x37, 0x8e, 0xd3, 0x34, 0x9e, 0x8f, 0x92, 0xd9, 0xf4, 0x5d, 0xca, 0x7c,
	0x57, 0x56, 0xd6, 0xb9, 0xdc, 0xa7, 0x6a, 0xef, 0x25, 0xdc, 0xaf, 0x08, 0x27, 0xd4, 0x33, 0xd7,
	0x66, 0x0d, 0x46, 0xb9, 0xb4, 0x0b, 0x68, 0x9e, 0xaf, 0x52, 0x21, 0xf0, 0xf1, 0xdf, 0x2b, 0xbc,
	0x64, 0x8f, 0xd8, 0x2c, 0x9a, 0xe0, 0xb5, 0x3c, 0xdc, 0xec, 0x07, 0xfa, 0x1c, 0x76, 0xc4, 0x4b,
	0xb2, 0xb0, 0xdc, 0xd0, 0xe1, 0xbe, 0x9c, 0xf4, 0x5c, 0x40, 0x3a, 0x72, 0xb9, 0x88, 0xa3, 0x25,
	0xf6, 0x7e, 0x83, 0xe6, 0x10, 0xbf, 0xdf, 0x8d, 0x1e, 0x43, 0xed, 0x2f, 0xbc, 0x11, 0x37, 0x29,
	0x79, 0xd3, 0xa6, 0xb3, 0xe4, 0xac, 0x22, 0x9d, 0xc7, 0xef, 0xa2, 0x7b, 0x74, 0xaa, 0x3c, 0x5e,
	0x80, 0xfb, 0x33, 0x0e, 0x71, 0x8a, 0x3f, 0x9c, 0xa1, 0x36, 0xb4, 0x72, 0x48, 0xb1, 0xf2, 0xd7,
	0x70, 0xf0, 0x32, 0x48, 0xdf, 0xbe, 0x7b, 0xaf, 0x5b, 0x65, 0x1f, 0x1a, 0x37, 0xb6, 0x7d, 0x68,
	0xfc, 0x00, 0xae, 0xc9, 0xcd, 0x7a, 0x90, 0xe0, 0xe5, 0x2a, 0x4c, 0xe5, 0xc7, 0x4a, 0xae, 0x07,
	0x62, 0xd2, 0x7b, 0x03, 0x87, 0x7a, 0xfd, 0xaf, 0x78, 0xf3, 0xc1, 0xac, 0x0d, 0xa0, 0x5d, 0x40,
	0x0b, 0x77, 0x5f, 0xe5, 0xdd, 0x95, 0x60, 0xa4, 0x62, 0x7c, 0x8b, 0x7d, 0x8d, 0x9d, 0xfc, 0x1f,
	0x00, 0x00, 0xff, 0xff, 0xaa, 0x96, 0xf4, 0xf5, 0x9e, 0x0d, 0x00, 0x00,
}

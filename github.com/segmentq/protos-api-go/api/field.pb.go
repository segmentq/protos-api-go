// Code generated by protoc-gen-go. DO NOT EDIT.
// source: field.proto

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Field int32

const (
	Field_FIELD_DEFINITION_UNDEFINED Field = 0
	// STRINGs
	Field_FIELD_DEFINITION_STRING Field = 10
	// INTs
	Field_FIELD_DEFINITION_INT   Field = 20
	Field_FIELD_DEFINITION_INT8  Field = 21
	Field_FIELD_DEFINITION_INT16 Field = 22
	Field_FIELD_DEFINITION_INT32 Field = 23
	Field_FIELD_DEFINITION_INT64 Field = 24
	// UINTs
	Field_FIELD_DEFINITION_UINT   Field = 30
	Field_FIELD_DEFINITION_UINT8  Field = 31
	Field_FIELD_DEFINITION_UINT16 Field = 32
	Field_FIELD_DEFINITION_UINT32 Field = 33
	Field_FIELD_DEFINITION_UINT64 Field = 34
	// FLOATs
	Field_FIELD_DEFINITION_FLOAT   Field = 40
	Field_FIELD_DEFINITION_FLOAT32 Field = 41
	Field_FIELD_DEFINITION_FLOAT64 Field = 42
	// BOOL
	Field_FIELD_DEFINITION_BOOL Field = 50
	// BLOB
	Field_FIELD_DEFINITION_BLOB Field = 60
	// RANGEs
	Field_FIELD_DEFINITION_RANGE       Field = 70
	Field_FIELD_DEFINITION_RANGE_INT   Field = 71
	Field_FIELD_DEFINITION_RANGE_FLOAT Field = 72
	// GEOs
	Field_FIELD_DEFINITION_GEO       Field = 80
	Field_FIELD_DEFINITION_GEO_RECT  Field = 81
	Field_FIELD_DEFINITION_GEO_POINT Field = 82
)

var Field_name = map[int32]string{
	0:  "FIELD_DEFINITION_UNDEFINED",
	10: "FIELD_DEFINITION_STRING",
	20: "FIELD_DEFINITION_INT",
	21: "FIELD_DEFINITION_INT8",
	22: "FIELD_DEFINITION_INT16",
	23: "FIELD_DEFINITION_INT32",
	24: "FIELD_DEFINITION_INT64",
	30: "FIELD_DEFINITION_UINT",
	31: "FIELD_DEFINITION_UINT8",
	32: "FIELD_DEFINITION_UINT16",
	33: "FIELD_DEFINITION_UINT32",
	34: "FIELD_DEFINITION_UINT64",
	40: "FIELD_DEFINITION_FLOAT",
	41: "FIELD_DEFINITION_FLOAT32",
	42: "FIELD_DEFINITION_FLOAT64",
	50: "FIELD_DEFINITION_BOOL",
	60: "FIELD_DEFINITION_BLOB",
	70: "FIELD_DEFINITION_RANGE",
	71: "FIELD_DEFINITION_RANGE_INT",
	72: "FIELD_DEFINITION_RANGE_FLOAT",
	80: "FIELD_DEFINITION_GEO",
	81: "FIELD_DEFINITION_GEO_RECT",
	82: "FIELD_DEFINITION_GEO_POINT",
}
var Field_value = map[string]int32{
	"FIELD_DEFINITION_UNDEFINED":   0,
	"FIELD_DEFINITION_STRING":      10,
	"FIELD_DEFINITION_INT":         20,
	"FIELD_DEFINITION_INT8":        21,
	"FIELD_DEFINITION_INT16":       22,
	"FIELD_DEFINITION_INT32":       23,
	"FIELD_DEFINITION_INT64":       24,
	"FIELD_DEFINITION_UINT":        30,
	"FIELD_DEFINITION_UINT8":       31,
	"FIELD_DEFINITION_UINT16":      32,
	"FIELD_DEFINITION_UINT32":      33,
	"FIELD_DEFINITION_UINT64":      34,
	"FIELD_DEFINITION_FLOAT":       40,
	"FIELD_DEFINITION_FLOAT32":     41,
	"FIELD_DEFINITION_FLOAT64":     42,
	"FIELD_DEFINITION_BOOL":        50,
	"FIELD_DEFINITION_BLOB":        60,
	"FIELD_DEFINITION_RANGE":       70,
	"FIELD_DEFINITION_RANGE_INT":   71,
	"FIELD_DEFINITION_RANGE_FLOAT": 72,
	"FIELD_DEFINITION_GEO":         80,
	"FIELD_DEFINITION_GEO_RECT":    81,
	"FIELD_DEFINITION_GEO_POINT":   82,
}

func (x Field) String() string {
	return proto.EnumName(Field_name, int32(x))
}
func (Field) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type FieldDefinition struct {
	Name     string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Field    Field              `protobuf:"varint,2,opt,name=field,enum=api.Field" json:"field,omitempty"`
	Repeated bool               `protobuf:"varint,3,opt,name=repeated" json:"repeated,omitempty"`
	Fields   []*FieldDefinition `protobuf:"bytes,4,rep,name=fields" json:"fields,omitempty"`
}

func (m *FieldDefinition) Reset()                    { *m = FieldDefinition{} }
func (m *FieldDefinition) String() string            { return proto.CompactTextString(m) }
func (*FieldDefinition) ProtoMessage()               {}
func (*FieldDefinition) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *FieldDefinition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldDefinition) GetField() Field {
	if m != nil {
		return m.Field
	}
	return Field_FIELD_DEFINITION_UNDEFINED
}

func (m *FieldDefinition) GetRepeated() bool {
	if m != nil {
		return m.Repeated
	}
	return false
}

func (m *FieldDefinition) GetFields() []*FieldDefinition {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterType((*FieldDefinition)(nil), "api.FieldDefinition")
	proto.RegisterEnum("api.Field", Field_name, Field_value)
}

func init() { proto.RegisterFile("field.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 389 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x93, 0x5d, 0x4f, 0xe2, 0x40,
	0x14, 0x86, 0x97, 0xe5, 0x23, 0xec, 0x21, 0xd9, 0x9d, 0x4c, 0xf8, 0x28, 0x2c, 0xcb, 0x56, 0x12,
	0x23, 0x12, 0x29, 0xb1, 0x18, 0xe2, 0x85, 0x37, 0x60, 0x3f, 0x6c, 0xd2, 0xb4, 0x38, 0xb6, 0x37,
	0xde, 0x10, 0x90, 0x01, 0x9b, 0x48, 0x8b, 0x50, 0x7f, 0x88, 0xff, 0xc0, 0x9f, 0xea, 0x74, 0x30,
	0x72, 0xc1, 0xf4, 0x0a, 0xe6, 0x3c, 0xe7, 0x9d, 0xf7, 0x3d, 0x99, 0x53, 0x28, 0x2d, 0x03, 0xfa,
	0xb2, 0x50, 0x36, 0xdb, 0x28, 0x8e, 0x70, 0x76, 0xb6, 0x09, 0xda, 0xef, 0x19, 0xf8, 0x63, 0x24,
	0x45, 0x8d, 0x2e, 0x83, 0x30, 0x88, 0x83, 0x28, 0xc4, 0x18, 0x72, 0xe1, 0x6c, 0x4d, 0xa5, 0x8c,
	0x9c, 0xe9, 0xfc, 0x22, 0xfc, 0x3f, 0x96, 0x21, 0xcf, 0xb5, 0xd2, 0x4f, 0x56, 0xfc, 0xad, 0x82,
	0xc2, 0xc4, 0x0a, 0x17, 0x92, 0x3d, 0xc0, 0x0d, 0x28, 0x6e, 0xe9, 0x86, 0xce, 0x62, 0xba, 0x90,
	0xb2, 0xac, 0xa9, 0x48, 0xbe, 0xcf, 0xf8, 0x02, 0x0a, 0xbc, 0x69, 0x27, 0xe5, 0xe4, 0x6c, 0xa7,
	0xa4, 0x96, 0x0f, 0xf2, 0x83, 0x2f, 0xf9, 0xea, 0xe9, 0x7e, 0xe4, 0x21, 0xcf, 0x19, 0x6e, 0x41,
	0xc3, 0xb0, 0x74, 0x5b, 0x9b, 0x6a, 0xba, 0x61, 0x39, 0x96, 0x67, 0xb9, 0xce, 0xd4, 0x77, 0xf8,
	0x41, 0xd7, 0xd0, 0x0f, 0xfc, 0x17, 0x6a, 0x47, 0xfc, 0xc1, 0x23, 0x96, 0x63, 0x22, 0xc0, 0x12,
	0x94, 0x8f, 0xa0, 0xe5, 0x78, 0xa8, 0x8c, 0xeb, 0x50, 0x11, 0x91, 0x6b, 0x54, 0x61, 0x53, 0x54,
	0x45, 0xe8, 0x72, 0x88, 0xaa, 0x69, 0x6c, 0xa0, 0xa2, 0x5a, 0x1a, 0x1b, 0x5e, 0x21, 0x49, 0x68,
	0xe7, 0x27, 0x49, 0x5a, 0x42, 0x99, 0xcf, 0xa3, 0xfc, 0x17, 0x0e, 0xe7, 0xef, 0xb3, 0xc8, 0xa9,
	0x90, 0x85, 0x39, 0x49, 0x85, 0x2c, 0x4d, 0x5b, 0x68, 0x69, 0xd8, 0xee, 0xc8, 0x43, 0x1d, 0xdc,
	0x04, 0x49, 0xcc, 0xd8, 0xb5, 0xe7, 0xe9, 0x94, 0xdd, 0xdb, 0x15, 0x4e, 0x39, 0x76, 0x5d, 0x1b,
	0xa9, 0x62, 0x64, 0xbb, 0x63, 0x74, 0x23, 0x4c, 0x43, 0x46, 0x8e, 0xa9, 0x23, 0x43, 0xf8, 0xfa,
	0x9c, 0xf1, 0x67, 0x34, 0xd9, 0x4e, 0x36, 0x53, 0xf8, 0x7e, 0x9e, 0x3b, 0xe1, 0x0a, 0x98, 0xba,
	0x8b, 0x26, 0xf8, 0x1f, 0xd4, 0x45, 0x64, 0x4a, 0xf4, 0x5b, 0x0f, 0xdd, 0x0b, 0xad, 0x13, 0x3c,
	0x71, 0x13, 0x6b, 0x32, 0x3e, 0x7b, 0x3c, 0x5d, 0x05, 0xf1, 0xf3, 0xdb, 0x5c, 0x79, 0x8a, 0xd6,
	0xfd, 0x1d, 0x5d, 0xad, 0x69, 0x18, 0xbf, 0xf6, 0xf9, 0x87, 0xb5, 0xeb, 0xb1, 0xe5, 0xee, 0xad,
	0xa2, 0x3e, 0xfb, 0x99, 0x17, 0x78, 0x69, 0xf0, 0x19, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x65, 0x65,
	0x17, 0x7a, 0x03, 0x00, 0x00,
}

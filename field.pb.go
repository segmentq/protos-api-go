// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: field.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScalarType int32

const (
	ScalarType_DATA_TYPE_UNDEFINED ScalarType = 0
	// STRINGs
	ScalarType_DATA_TYPE_STRING ScalarType = 10
	// INTs
	ScalarType_DATA_TYPE_INT   ScalarType = 20
	ScalarType_DATA_TYPE_INT8  ScalarType = 21
	ScalarType_DATA_TYPE_INT16 ScalarType = 22
	ScalarType_DATA_TYPE_INT32 ScalarType = 23
	ScalarType_DATA_TYPE_INT64 ScalarType = 24
	// UINTs
	ScalarType_DATA_TYPE_UINT   ScalarType = 30
	ScalarType_DATA_TYPE_UINT8  ScalarType = 31
	ScalarType_DATA_TYPE_UINT16 ScalarType = 32
	ScalarType_DATA_TYPE_UINT32 ScalarType = 33
	ScalarType_DATA_TYPE_UINT64 ScalarType = 34
	// FLOATs
	ScalarType_DATA_TYPE_FLOAT   ScalarType = 40
	ScalarType_DATA_TYPE_FLOAT32 ScalarType = 41
	ScalarType_DATA_TYPE_FLOAT64 ScalarType = 42
	// BOOL
	ScalarType_DATA_TYPE_BOOL ScalarType = 50
	// BLOB
	ScalarType_DATA_TYPE_BLOB ScalarType = 60
)

// Enum value maps for ScalarType.
var (
	ScalarType_name = map[int32]string{
		0:  "DATA_TYPE_UNDEFINED",
		10: "DATA_TYPE_STRING",
		20: "DATA_TYPE_INT",
		21: "DATA_TYPE_INT8",
		22: "DATA_TYPE_INT16",
		23: "DATA_TYPE_INT32",
		24: "DATA_TYPE_INT64",
		30: "DATA_TYPE_UINT",
		31: "DATA_TYPE_UINT8",
		32: "DATA_TYPE_UINT16",
		33: "DATA_TYPE_UINT32",
		34: "DATA_TYPE_UINT64",
		40: "DATA_TYPE_FLOAT",
		41: "DATA_TYPE_FLOAT32",
		42: "DATA_TYPE_FLOAT64",
		50: "DATA_TYPE_BOOL",
		60: "DATA_TYPE_BLOB",
	}
	ScalarType_value = map[string]int32{
		"DATA_TYPE_UNDEFINED": 0,
		"DATA_TYPE_STRING":    10,
		"DATA_TYPE_INT":       20,
		"DATA_TYPE_INT8":      21,
		"DATA_TYPE_INT16":     22,
		"DATA_TYPE_INT32":     23,
		"DATA_TYPE_INT64":     24,
		"DATA_TYPE_UINT":      30,
		"DATA_TYPE_UINT8":     31,
		"DATA_TYPE_UINT16":    32,
		"DATA_TYPE_UINT32":    33,
		"DATA_TYPE_UINT64":    34,
		"DATA_TYPE_FLOAT":     40,
		"DATA_TYPE_FLOAT32":   41,
		"DATA_TYPE_FLOAT64":   42,
		"DATA_TYPE_BOOL":      50,
		"DATA_TYPE_BLOB":      60,
	}
)

func (x ScalarType) Enum() *ScalarType {
	p := new(ScalarType)
	*p = x
	return p
}

func (x ScalarType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScalarType) Descriptor() protoreflect.EnumDescriptor {
	return file_field_proto_enumTypes[0].Descriptor()
}

func (ScalarType) Type() protoreflect.EnumType {
	return &file_field_proto_enumTypes[0]
}

func (x ScalarType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScalarType.Descriptor instead.
func (ScalarType) EnumDescriptor() ([]byte, []int) {
	return file_field_proto_rawDescGZIP(), []int{0}
}

type GeoType int32

const (
	// RANGEs
	GeoType_DATA_TYPE_RANGE       GeoType = 0
	GeoType_DATA_TYPE_RANGE_INT   GeoType = 1
	GeoType_DATA_TYPE_RANGE_FLOAT GeoType = 2
	// GEOs
	GeoType_DATA_TYPE_GEO       GeoType = 10
	GeoType_DATA_TYPE_GEO_RECT  GeoType = 11
	GeoType_DATA_TYPE_GEO_POINT GeoType = 12
)

// Enum value maps for GeoType.
var (
	GeoType_name = map[int32]string{
		0:  "DATA_TYPE_RANGE",
		1:  "DATA_TYPE_RANGE_INT",
		2:  "DATA_TYPE_RANGE_FLOAT",
		10: "DATA_TYPE_GEO",
		11: "DATA_TYPE_GEO_RECT",
		12: "DATA_TYPE_GEO_POINT",
	}
	GeoType_value = map[string]int32{
		"DATA_TYPE_RANGE":       0,
		"DATA_TYPE_RANGE_INT":   1,
		"DATA_TYPE_RANGE_FLOAT": 2,
		"DATA_TYPE_GEO":         10,
		"DATA_TYPE_GEO_RECT":    11,
		"DATA_TYPE_GEO_POINT":   12,
	}
)

func (x GeoType) Enum() *GeoType {
	p := new(GeoType)
	*p = x
	return p
}

func (x GeoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeoType) Descriptor() protoreflect.EnumDescriptor {
	return file_field_proto_enumTypes[1].Descriptor()
}

func (GeoType) Type() protoreflect.EnumType {
	return &file_field_proto_enumTypes[1]
}

func (x GeoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeoType.Descriptor instead.
func (GeoType) EnumDescriptor() ([]byte, []int) {
	return file_field_proto_rawDescGZIP(), []int{1}
}

type FieldDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to DataType:
	//	*FieldDefinition_Scalar
	//	*FieldDefinition_Geo
	DataType  isFieldDefinition_DataType `protobuf_oneof:"data_type"`
	IsPrimary bool                       `protobuf:"varint,4,opt,name=is_primary,json=isPrimary,proto3" json:"is_primary,omitempty"`
	Repeated  bool                       `protobuf:"varint,5,opt,name=repeated,proto3" json:"repeated,omitempty"` // Allow arrays
	Fields    []*FieldDefinition         `protobuf:"bytes,6,rep,name=fields,proto3" json:"fields,omitempty"`      // Allow nested structure
}

func (x *FieldDefinition) Reset() {
	*x = FieldDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_field_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDefinition) ProtoMessage() {}

func (x *FieldDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_field_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDefinition.ProtoReflect.Descriptor instead.
func (*FieldDefinition) Descriptor() ([]byte, []int) {
	return file_field_proto_rawDescGZIP(), []int{0}
}

func (x *FieldDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *FieldDefinition) GetDataType() isFieldDefinition_DataType {
	if m != nil {
		return m.DataType
	}
	return nil
}

func (x *FieldDefinition) GetScalar() ScalarType {
	if x, ok := x.GetDataType().(*FieldDefinition_Scalar); ok {
		return x.Scalar
	}
	return ScalarType_DATA_TYPE_UNDEFINED
}

func (x *FieldDefinition) GetGeo() GeoType {
	if x, ok := x.GetDataType().(*FieldDefinition_Geo); ok {
		return x.Geo
	}
	return GeoType_DATA_TYPE_RANGE
}

func (x *FieldDefinition) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *FieldDefinition) GetRepeated() bool {
	if x != nil {
		return x.Repeated
	}
	return false
}

func (x *FieldDefinition) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

type isFieldDefinition_DataType interface {
	isFieldDefinition_DataType()
}

type FieldDefinition_Scalar struct {
	Scalar ScalarType `protobuf:"varint,2,opt,name=scalar,proto3,enum=api.ScalarType,oneof"`
}

type FieldDefinition_Geo struct {
	Geo GeoType `protobuf:"varint,3,opt,name=geo,proto3,enum=api.GeoType,oneof"`
}

func (*FieldDefinition_Scalar) isFieldDefinition_DataType() {}

func (*FieldDefinition_Geo) isFieldDefinition_DataType() {}

var File_field_proto protoreflect.FileDescriptor

var file_field_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x22, 0xe8, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x63,
	0x61, 0x6c, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73,
	0x63, 0x61, 0x6c, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x03, 0x67, 0x65, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2a, 0xf7, 0x02,
	0x0a, 0x0a, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x44,
	0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x14, 0x12, 0x12,
	0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x38,
	0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x16, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x33, 0x32, 0x10, 0x17, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10,
	0x18, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x49, 0x4e, 0x54, 0x10, 0x1e, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x38, 0x10, 0x1f, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x31, 0x36, 0x10, 0x20,
	0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x49,
	0x4e, 0x54, 0x33, 0x32, 0x10, 0x21, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x49, 0x4e, 0x54, 0x36, 0x34, 0x10, 0x22, 0x12, 0x13, 0x0a, 0x0f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10,
	0x28, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46,
	0x4c, 0x4f, 0x41, 0x54, 0x33, 0x32, 0x10, 0x29, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x36, 0x34, 0x10, 0x2a, 0x12,
	0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x4f,
	0x4c, 0x10, 0x32, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x3c, 0x2a, 0x96, 0x01, 0x0a, 0x07, 0x47, 0x65, 0x6f, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41, 0x54, 0x41,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x41, 0x4e, 0x47, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4f, 0x10, 0x0a, 0x12,
	0x16, 0x0a, 0x12, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4f,
	0x5f, 0x52, 0x45, 0x43, 0x54, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x41, 0x54, 0x41, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x45, 0x4f, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x0c,
	0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x71, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2d, 0x61,
	0x70, 0x69, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_field_proto_rawDescOnce sync.Once
	file_field_proto_rawDescData = file_field_proto_rawDesc
)

func file_field_proto_rawDescGZIP() []byte {
	file_field_proto_rawDescOnce.Do(func() {
		file_field_proto_rawDescData = protoimpl.X.CompressGZIP(file_field_proto_rawDescData)
	})
	return file_field_proto_rawDescData
}

var file_field_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_field_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_field_proto_goTypes = []interface{}{
	(ScalarType)(0),         // 0: api.ScalarType
	(GeoType)(0),            // 1: api.GeoType
	(*FieldDefinition)(nil), // 2: api.FieldDefinition
}
var file_field_proto_depIdxs = []int32{
	0, // 0: api.FieldDefinition.scalar:type_name -> api.ScalarType
	1, // 1: api.FieldDefinition.geo:type_name -> api.GeoType
	2, // 2: api.FieldDefinition.fields:type_name -> api.FieldDefinition
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_field_proto_init() }
func file_field_proto_init() {
	if File_field_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_field_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_field_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FieldDefinition_Scalar)(nil),
		(*FieldDefinition_Geo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_field_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_field_proto_goTypes,
		DependencyIndexes: file_field_proto_depIdxs,
		EnumInfos:         file_field_proto_enumTypes,
		MessageInfos:      file_field_proto_msgTypes,
	}.Build()
	File_field_proto = out.File
	file_field_proto_rawDesc = nil
	file_field_proto_goTypes = nil
	file_field_proto_depIdxs = nil
}
